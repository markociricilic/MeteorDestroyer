Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2022.1 (win64) Build 3526262 Mon Apr 18 15:48:16 MDT 2022
| Date         : Mon Mar 31 17:16:02 2025
| Host         : MUGEN running 64-bit major release  (build 9200)
| Command      : report_drc -file parser_wrapper_drc_routed.rpt -pb parser_wrapper_drc_routed.pb -rpx parser_wrapper_drc_routed.rpx
| Design       : parser_wrapper
| Device       : xc7a200tsbg484-1
| Speed File   : -1
| Design State : Fully Routed
------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 96
+----------+----------+-------------------------------------------------------------------+------------+
| Rule     | Severity | Description                                                       | Violations |
+----------+----------+-------------------------------------------------------------------+------------+
| CFGBVS-1 | Warning  | Missing CFGBVS and CONFIG_VOLTAGE Design Properties               | 1          |
| DPIP-1   | Warning  | Input pipelining                                                  | 14         |
| DPOP-1   | Warning  | PREG Output pipelining                                            | 14         |
| DPOP-2   | Warning  | MREG Output pipelining                                            | 14         |
| RBOR-1   | Warning  | RAMB output registers                                             | 38         |
| AVAL-4   | Advisory | enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND | 9          |
| REQP-29  | Advisory | enum_CREG_0_connects_CEC_GND                                      | 6          |
+----------+----------+-------------------------------------------------------------------+------------+

2. REPORT DETAILS
-----------------
CFGBVS-1#1 Warning
Missing CFGBVS and CONFIG_VOLTAGE Design Properties  
Neither the CFGBVS nor CONFIG_VOLTAGE voltage property is set in the current_design.  Configuration bank voltage select (CFGBVS) must be set to VCCO or GND, and CONFIG_VOLTAGE must be set to the correct configuration voltage, in order to determine the I/O voltage support for the pins in bank 0.  It is suggested to specify these either using the 'Edit Device Properties' function in the GUI or directly in the XDC file using the following syntax:

 set_property CFGBVS value1 [current_design]
 #where value1 is either VCCO or GND

 set_property CONFIG_VOLTAGE value2 [current_design]
 #where value2 is the voltage provided to configuration bank 0

Refer to the device configuration user guide for more information.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/filtered_positions/genblk4[0].filtered_position/DSP48E1_inst input parser_i/object_localizer_1/inst/filtered_positions/genblk4[0].filtered_position/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/filtered_positions/genblk4[1].filtered_position/DSP48E1_inst input parser_i/object_localizer_1/inst/filtered_positions/genblk4[1].filtered_position/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/filtered_positions/genblk4[2].filtered_position/DSP48E1_inst input parser_i/object_localizer_1/inst/filtered_positions/genblk4[2].filtered_position/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/x_fusion/DSP48E1_inst input parser_i/object_localizer_1/inst/x_fusion/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/x_position/DSP48E1_inst input parser_i/object_localizer_1/inst/x_position/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/x_position/DSP48E1_inst input parser_i/object_localizer_1/inst/x_position/DSP48E1_inst/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/y_fusion/DSP48E1_inst input parser_i/object_localizer_1/inst/y_fusion/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/y_position/DSP48E1_inst input parser_i/object_localizer_1/inst/y_position/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/y_position/DSP48E1_inst input parser_i/object_localizer_1/inst/y_position/DSP48E1_inst/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/z_fusion/DSP48E1_inst input parser_i/object_localizer_1/inst/z_fusion/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/z_position/DSP48E1_inst input parser_i/object_localizer_1/inst/z_position/DSP48E1_inst/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP parser_i/object_localizer_1/inst/z_position/DSP48E1_inst input parser_i/object_localizer_1/inst/z_position/DSP48E1_inst/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP parser_i/proportional_control_0/inst/u0/product_x input parser_i/proportional_control_0/inst/u0/product_x/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP parser_i/proportional_control_0/inst/u0/product_z input parser_i/proportional_control_0/inst/u0/product_z/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[0].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[0].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[10].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[10].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[11].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[11].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[1].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[1].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[2].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[2].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[3].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[3].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[4].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[4].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[5].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[5].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[6].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[6].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[7].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[7].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[8].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[8].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[9].ultrasonic_sensor/product output parser_i/array_parser_0/inst/genblk1[9].ultrasonic_sensor/product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP parser_i/proportional_control_0/inst/u0/product_x output parser_i/proportional_control_0/inst/u0/product_x/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP parser_i/proportional_control_0/inst/u0/product_z output parser_i/proportional_control_0/inst/u0/product_z/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[0].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[0].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[10].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[10].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[11].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[11].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[1].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[1].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[2].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[2].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[3].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[3].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[4].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[4].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[5].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[5].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[6].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[6].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[7].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[7].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[8].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[8].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP parser_i/array_parser_0/inst/genblk1[9].ultrasonic_sensor/product multiplier stage parser_i/array_parser_0/inst/genblk1[9].ultrasonic_sensor/product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP parser_i/proportional_control_0/inst/u0/product_x multiplier stage parser_i/proportional_control_0/inst/u0/product_x/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP parser_i/proportional_control_0/inst/u0/product_z multiplier stage parser_i/proportional_control_0/inst/u0/product_z/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

RBOR-1#1 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_0 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#2 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_1 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#3 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_10 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#4 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_11 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#5 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_12 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#6 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_13 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#7 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_14 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#8 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_15 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#9 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_16 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#10 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_17 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#11 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_18 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#12 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_2 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#13 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_3 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#14 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_4 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#15 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_5 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#16 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_6 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#17 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_7 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#18 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_8 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#19 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_x_reg_1_9 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#20 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_0 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#21 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_1 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#22 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_10 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#23 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_11 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#24 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_12 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#25 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_13 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#26 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_14 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#27 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_15 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#28 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_16 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#29 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_17 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#30 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_18 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#31 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_2 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#32 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_3 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#33 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_4 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#34 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_5 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#35 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_6 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#36 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_7 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#37 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_8 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

RBOR-1#38 Warning
RAMB output registers  
RAMB parser_i/proportional_control_0/inst/u0/ratio_out_z_reg_1_9 output DOA (1) is connected to asynchronous registers, if you use synchronous controls you will get better results both in area and delay (RAMB has synchronous registers built in).
Related violations: <none>

AVAL-4#1 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/filtered_positions/genblk4[0].filtered_position/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#2 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/filtered_positions/genblk4[1].filtered_position/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#3 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/filtered_positions/genblk4[2].filtered_position/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#4 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/x_fusion/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#5 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/x_position/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#6 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/y_fusion/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#7 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/y_position/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#8 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/z_fusion/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

AVAL-4#9 Advisory
enum_USE_DPORT_FALSE_enum_DREG_ADREG_0_connects_CED_CEAD_RSTD_GND  
parser_i/object_localizer_1/inst/z_position/DSP48E1_inst: DSP48E1 is not using the D port (USE_DPORT = FALSE). For improved power characteristics, set DREG and ADREG to '1', tie CED, CEAD, and RSTD to logic '0'.
Related violations: <none>

REQP-29#1 Advisory
enum_CREG_0_connects_CEC_GND  
parser_i/object_localizer_1/inst/filtered_positions/genblk4[0].filtered_position/DSP48E1_inst: When the DSP48E1 CREG attribute is set to 0, the CEC input pin should be tied to GND to save power.
Related violations: <none>

REQP-29#2 Advisory
enum_CREG_0_connects_CEC_GND  
parser_i/object_localizer_1/inst/filtered_positions/genblk4[1].filtered_position/DSP48E1_inst: When the DSP48E1 CREG attribute is set to 0, the CEC input pin should be tied to GND to save power.
Related violations: <none>

REQP-29#3 Advisory
enum_CREG_0_connects_CEC_GND  
parser_i/object_localizer_1/inst/filtered_positions/genblk4[2].filtered_position/DSP48E1_inst: When the DSP48E1 CREG attribute is set to 0, the CEC input pin should be tied to GND to save power.
Related violations: <none>

REQP-29#4 Advisory
enum_CREG_0_connects_CEC_GND  
parser_i/object_localizer_1/inst/x_fusion/DSP48E1_inst: When the DSP48E1 CREG attribute is set to 0, the CEC input pin should be tied to GND to save power.
Related violations: <none>

REQP-29#5 Advisory
enum_CREG_0_connects_CEC_GND  
parser_i/object_localizer_1/inst/y_fusion/DSP48E1_inst: When the DSP48E1 CREG attribute is set to 0, the CEC input pin should be tied to GND to save power.
Related violations: <none>

REQP-29#6 Advisory
enum_CREG_0_connects_CEC_GND  
parser_i/object_localizer_1/inst/z_fusion/DSP48E1_inst: When the DSP48E1 CREG attribute is set to 0, the CEC input pin should be tied to GND to save power.
Related violations: <none>


