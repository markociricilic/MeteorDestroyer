/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"
#include "xil_printf.h"

#define SENSOR_READ_BASE_ADDR    XPAR_OBJECT_LOCALIZER_1_BASEADDR
#define SENSOR_LOC_BASE_ADDR    XPAR_OBJECT_LOCALIZER_1_BASEADDR + 16
#define SENSOR_TILT_BASE_ADDR   XPAR_OBJECT_LOCALIZER_1_BASEADDR + 15
#define X_COORDINATE		    XPAR_OBJECT_LOCALIZER_1_BASEADDR + 12
#define Y_COORDINATE 		    X_COORDINATE + 1
#define Z_COORDINATE 		    X_COORDINATE + 2

int main()
{
    init_platform();
    xil_printf("Hello");
    volatile int * sensor = (int *)SENSOR_READ_BASE_ADDR;
	int * sensor_tilt = (int *)SENSOR_TILT_BASE_ADDR;
	int * sensor_locations = (int *)SENSOR_LOC_BASE_ADDR;
//	short sensor_positions [12][4] = {{0, 0, 0, 0},
//									{-150, 0, 0, 2},
//									{150, 0, 0, 1},
//									{0, 0, 100, 0},
//									{-150, 0, 100, 2},
//									{150, 0, 100, 1},
//									{0, 0, 200, 0},
//									{-150, 0, 200, 2},
//									{150, 0, 200, 1},
//									{0, 0, 300, 0},
//									{-150, 0, 300, 2},
//									{150, 0, 300, 1}};
	short sensor_positions [12][4] = {{0, 0, 100, 0},
									{150, 0, 100, 1},
									{-150, 0, 100, 2},
									{0, 0, 200, 0},
									{150, 0, 200, 1},
									{-150, 0, 200, 2},
									{0, 0, 300, 0},
									{150, 0, 300, 1},
									{-150, 0, 300, 2},
									{0, 0, 400, 0},
									{150, 0, 400, 1},
									{-150, 0, 400, 2}};


	for(int i = 0; i < 12; i++){
		*(sensor_locations + 2*i) = (sensor_positions[i][0] << 16) | sensor_positions[i][1];
		*(sensor_locations + 2*i + 1) = (sensor_positions[i][3] << 16) | sensor_positions[i][2];
	}
	*sensor_tilt = (1000 << 16) | 0x3618;
	
	volatile int * x = (int *)X_COORDINATE;
	volatile int * y = (int *)Y_COORDINATE;
	volatile int * z = (int *)Z_COORDINATE;

	while (1) {
		 for(int i = 0; i < 12; i++)
		 	xil_printf("sensor: %d %d\n\r", i, *(sensor+i));

		xil_printf("x, y, z %d %d %d\n\r", *x, *y, *z);
		usleep(10000);
	}

    cleanup_platform();
    return 0;
}
